mod libcore;


/**
* {@class Libcore}
* This class contains the low level functions of performing
* basic operations on the Sharp Virtual machine
*/
class Libcore {

    class os {
        public static fn printData(var[] data)
        {
            __print_(data);
        }

        /**
        * Classic print function to print an array of data to
        * the console
        */
        private static fn __print_(var[] message)
        {
            if(message != null) {
                foreach(var char : message) {
                    __print_(char, true);
                }
            } else {
                __print_('n', true);
                __print_('u', true);
                __print_('l', true);
                __print_('l', true);
            }
        }

        /**
        * print a single character to the console
        */
        public static fn __print_(var char, var isCharacter)
        {
            if(isCharacter) {
                __asm(
                    "  movr %adx,%fp                                                               "
                    "  smov ebx+0               // get local 'char'                                "
                    "  _putc ebx                                                                   "
                );
            } else {
                __asm(
                    "  movr %adx,%fp                                                               "
                    "  smov ebx+0               // get local 'char'                                "
                    "  put ebx                                                                     "
                );
            }
        }


    }

    class sys {

        public static fn compareInstance(dynamic_object object, dynamic_object o) : var
        {
            var result;

            __asm(
                "  movl <o>                                                               "
                "  pushref                                                                "
                "  movl <object>                                                          "
                "  testobj                                                                "
                "  movr %adx,%sp                                                          "
                "  smovr %cmt+2                                                           "
            );
            return result;
        }
    }
}