mod application;

class Base {

    static fn print2(var[] message) {
        __asm("odessy/x64/print.asm");
    }
}

class Main base Base {

    var x = 9;
    Main mm;

    static fn print(var[] message) {
        __asm("odessy/x64/print.asm");
    }

    static fn printc(var char) {
        __asm("odessy/x64/printc.asm");
    }

    static fn foo(Main main) {
        fact(Main.x);
    }

    static fn fact(var x) : var {
        return (x == 1) ? x : x * fact(x - 1);
    }

    static fn operator++(var x) {
        x + 1;
    }

    static fn operator+(var x) : var {
        x = 8;
        return 1;
    }

    static fn operator<<(var x) : var {
        x = 0;
        return 1;
    }

    static fn operator<<(Main x) : var {
        x = new Main();
        return 1;
    }

    static fn operator+=(var x) : var {
        x = 12.9;
        return 1;
    }


    static fn main(string[] args) : var {
        var[] str = "factorial of 8 is ";

        var[] arry = new var[10];
        foreach(var x : arry) {
            printc(fact(1));
            __asm("movi ' ',ebx" "_putc ebx");
            printc(x);
            __asm("movi ' ',ebx" "_putc ebx");
        }

        for(var i = 0; i < 10; i++) {
        }

        var x = 5;
        while((--x) > 0) {
            printc(x);
            __asm("nop movi ' ',ebx" "_putc ebx");
        }
        print("done1\n");

        try {
        try {
            do {
                x++;
            }while(x < 10);
            throw new RuntimeErr("Hello first error");
        }
         catch(RuntimeErr e) {
            try {
            throw new RuntimeErr("Genericcc!!!");
            } catch(RuntimeErr re) {
                print("caught FIRSTTTT!! error ");
                print(re.message);
                throw new RuntimeErr("OOppsss!!!!");
            }

        } finally {
            print("finally!!");
            try {
                throw new RuntimeErr("OOppsss Number 2!!!!");
            } finally {
            print("finally inside finally!!"); // todo: fix
            }
        }
        } finally {
            print("finally!! yet again");
        }

        print2("doing if statements\n");
        x = 11;
        __asm("nop nop");
        if(x == 6) {
            print("x == 6");
        } else if(x == 10) {
            print("x == 10");
        } else if(arry == null) {
            print2("arry == null");
        } else if(arry != null) {
            print2("arry != null");
        } else {
            print("im not sure what x is?");
        }

        print("done");


        __asm("movi ' ',ebx" "_putc ebx");
        __asm(
            "movr %adx,%sp"
            "smov %ebx"
            "put %ebx"
         );
        //fact(6);
        //__asm("odessy/x64/compute_factorial.asm");
    }
}