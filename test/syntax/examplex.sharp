mod application;

import io;

class X {
    X yy;
    var xx;
}

/*
* Refrence design
*/
fn foo(Main x) {
	x = new Main(); // the original x is perserved x in stack frame is dererefrenced and created
}

fn foobar() {
	Main x = new Main(); // x is created
	foo(x); // the values of x are preserved
	x = new Main(); // x is recreated here values are dropped
}


class Main {

    var x = X.yy.yy.operator+(8);
    var y=0;
    X b;

    fn foo(var x) {

    }

    fn foo(var x) {

    }

    public static fn main(string[] args) : var {
        Console.write("Hello, World!");
    }
}